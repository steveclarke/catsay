#!/usr/bin/env bash

set -e
set -o pipefail

dirname=$(dirname -- "${0}")
script_dir=$(cd -- "${dirname}" > /dev/null 2>&1 && pwd)
. ${script_dir}/shared.lib.sh
. ${script_dir}/.env


usage() {
  echo "Usage: ${0} [-h]"
  echo ""
  echo "Builds the development Docker image from Dockerfile.dev"
  echo ""
  echo "OPTIONS"
  echo ""
  echo "  -h - show this help"
}

while getopts ":h" opt "${@}"; do
  case ${opt} in
    h)
      usage
      exit 0
      ;;
    \?)
      log "Invalid option: ${OPTARG}"
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND - 1))

check_for_docker

bashrc_local=".bashrc.dx.local"
bashrc_local_path="${root_dir}"/"${bashrc_local}"

if [ -e "${bashrc_local_path}" ]; then
  log "${bashrc_local_path} exists - not touching it"
else
  log "${bashrc_local_path} missing - creating it..."
  echo "# Place custom Bash configuration to use" >> "${bashrc_local_path}"
  echo "# inside the running container here" >> "${bashrc_local_path}"
fi
if grep "${bashrc_local}" .gitignore > /dev/null 2>&1; then
  log "${bashrc_local} already in .gitignore"
else
  log "${bashrc_local} not in .gitignore - adding it..."
  echo "# This is for developer-specific customizations" >> .gitignore
  echo "${bashrc_local}" >> .gitignore
fi

log "Building Docker image '${IMAGE_NAME}'..."
docker build \
  --tag "${IMAGE_NAME}" \
  --file "${root_dir}/Dockerfile.dev" \
  "${root_dir}"

log "Docker image '${IMAGE_NAME}' built successfully!"
